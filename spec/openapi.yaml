# This is an **example** API to demonstrate features of OpenAPI specification.
# It doesn't cover all OpenAPI features. For more full example check out: https://github.com/APIs-guru/petstore_extended

openapi: 3.0.0
info:
  version: "3.0.0" # Your API version
  # It can be any string but it is better to use semantic versioning: http://semver.org/
  # Warning: OpenAPI require version to be string, but without quotation YAML can recognize it as number.
  
  title: SimpleTexting API Documentation # Replace with your API title
  # Keep it simple. Don't add "API" or version at the end of the string.

  termsOfService: 'https://simpletexting.com/terms/' # [Optional] Replace with an URL to your ToS
  contact:
    email: support@simpletexting.net # [Optional] Replace with your contact email
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  
  # Describe your API here, you can use GFM (https://guides.github.com/features/mastering-markdown) here
  description: |
    # Introduction 
    The SimpleTexting APIs provide powerful business messaging capabilities across sending, receiving, and processing SMS, MMS, and rich messaging.

    All requests to the SimpleTexting REST API must be authenticated, this can either be done using Basic Authentication or by signing with a HMAC signature.
      
    # Credentials
      
    To access the API, an API key and secret are required.
      
    [Sign up for a developer account here to get access](https://developers.simpletexting.com/register/): Register here.

    # Features
    ###  De-Duplication 
    De-Duplication helps you avoid having to undertake data cleansing before commencing send outs.  
    It automatically detects and withholds messages deemed to be duplicates through the use of a 24-hour window – if a message is sent to the same number with the same content within a 24hr period, the subsequent message(s) will be withheld and rejected. To enable this, you don't need to make any changes to your application, just an account configuration change by SimpleTexting's support team.

    ###  Social Sending 
    Social Sending permits messages to be sent only during sociable hours - i.e. 8am to 6pm (based on your accounts local time zone - not local time). 
    Messages sent outside of these hours are scheduled to be released during the next social time period. This feature helps businesses avoid send-outs during a time that would be deemed unsuitable by the customer. To enable this, you don't need to make any changes to your application, just an account configuration change by SimpleTexting's support team.

    ###  Familiar Sender
    Familiar Sender ensures all communication sent to a customer are from the same phone number. 
    This allows businesses to build trust and familiarity with their customers and not confuse them by changing outgoing numbers. To enable this, you don't need to make any changes to your application, just an account configuration change by SimpleTexting's support team.

    ### Character Converter
    Characters in a message may not always fall within the GSM-7 supported characterset, and when this occurs all 
    outbound messages will be encoded using UCS-2 leading to the customer being double-charged for the SMS. Character Converter 
    can help you avoid being double-charged for your SMS by converting all characters into the GSM-7 format ensuring you always 
    get the maximum characters into an SMS. Bear in my mind, this will downgrade all your unicode characters so for instance, 
    your emojis will be translated into a string of unknown characters (eg: �).  To enable this, you don't need to make any 
    changes to your application, just an account configuration change by SimpleTexting's support team.


# A list of tags used by the specification with additional metadata.
# The order of the tags can be used to reflect on their order by the parsing tools.
tags:
  - name: Basic Authentication
    description: >- 
    
      Every request requires an `Authorization` header in the following format:
      
      ```plain

      Authorization: Basic Base64(api_key:api_secret)

      ```
      
      Where the header consists of the Basic keyword followed by your Basic Authentication `api_key` and `api_secret` that you have been supplied by support, separated with a colon (:) which is then Base64 encoded.
      
      ### Example request with Basic Authentication
      
      ```plain

      POST /v1/messages HTTP/1.1

      Host: api.simpletexting.com

      Accept: application/json

      Content-Type: application/json

      Authorization: Basic dGhpc2lzYWtleTp0aGlzaXNhc2VjcmV0Zm9ybW1iYXNpY2F1dGhyZXN0YXBp

      {
        "messages": [
          {
            "content": "Hello World",
            "destination_number": "+1234567890",
            "format": "SMS"
          }
        ]
      } 
      
      ```
      
      _Note: spaces are used as indentation in the body of the above request._
  - name: HMAC Authentication
    description: >- 
      
      Every request requires an `Authorization` header in the following formats:
      
      For a request with a request body:
      
      ```plain

      Authorization: hmac username="<API KEY>", algorithm="hmac-sha1", headers  ="Date Content-MD5 request-line", signature="<SIGNATURE>"

      ```


      For a request _without_ a request body:


      ```plain

      Authorization: hmac username="<API KEY>", algorithm="hmac-sha1", headers="Date request-line", signature="<SIGNATURE>"

      ```
      
      ### To create this header

      #### Step 1

      Add a `Date` header to the request using the current date time in [RFC7231 Section 7.1.1.2](http://tools.ietf.org/html/rfc7231#section-7.1.1.2) format

      #### Step 2

      If the request has a body, add a header called `Content-MD5` where the value of this header is an MD5 hash of the request body, otherwise this header is not required

      #### Step 3

      Create a signing string by concatenating the `Date` header, the

      `Content-MD5` header (if set) and the request line with line breaks:

      ```plain

      Date: Sat, 30 Jul 2016 05:13:23 GMT\nContent-MD5: 10fd4feab20d38432480c07301e49616\nPOST /v1/messages HTTP/1.1

      ```
      
      or

      ```plain

      Date: Sat, 30 Jul 2016 05:13:23 GMT\nGET /v1/messages/404b941b-2a29-469f-b114-9ea3e16bbe18 HTTP/1.1

      ```

      #### Step 4

      Create a SHA1 HMAC hash using the signing string and the secret key (both converted to bytes using UTF-8) ```HMAC-SHA1(signing string, secret)```

      #### Step 5

      Base64 encode the HMAC hash and include it as the signature in the ```Authorization``` header

      ### Example request with body

      ```plain

      POST /v1/messages HTTP/1.1

      Host: api.simpletexting.com

      Accept: application/json

      Content-Type: application/json

      Date: Sat, 30 Jul 2016 05:18:52 GMT

      Authorization: hmac username="uCXUdoogNfCsehEClbO2", algorithm="hmac-sha1", headers="Date Content-MD5 request-line", signature="Ia4G5lkhH/3NDYpix+8ZHUnp6bA="

      Content-MD5: 5407644fa83bec240dede971307e0cad

      Content-Length: 133

      {
        "messages": [
          {
            "content": "Hello World",
            "destination_number": "+1234567890",
          "format": "SMS"
          }
        ]
      }

      ```
      
      _Note: spaces are used as indentation in the body of the above request._

      ### Example request without body

      ```plain

      GET /v1/messages/404b941b-2a29-469f-b114-9ea3e16bbe18 HTTP/1.1

      Host: api.simpletexting.com

      Accept: application/json

      Date: Sat, 30 Jul 2016 05:18:52 GMT

      Authorization: hmac username="uCXUdoogNfCsehEClbO2", algorithm="hmac-sha1", headers="Date request-line", signature="NTUwMjUwNTVmZGYzZTIxODMyYjc1ZmM3M2EwZWQ1NzA3NzA4ZTZjNw=="
      ```
  - name: Development Tools
    description: |
      ## SDKs
      Software Development Kits are available across six languages to assist with integration with the major endpoints. 

      In the event an SDK is not available or does not work with your environment, any standard HTTP client library can be used. These are some client libraries we recommend, 
      that include HMAC authentication capability: 

      ### C#
      [RestSharp](http://restsharp.org/) with custom authenticator

      ### Java
      [Acquia HTTP Request Interceptor](https://github.com/acquia/http-hmac-java) for the Apache HTTP Client

      ### Javascript
      [Acquia HTTP HMAC Signer for JavaScript](https://github.com/acquia/http-hmac-javascript)

      ### PHP
      [HTTP HMAC Signer for PHP](https://github.com/acquia/http-hmac-php) Which can be used with [Guzzle](http://docs.guzzlephp.org/en/stable/).
      
      ### Python
      [HMAC](https://github.com/guardian/httpie-hmac-auth) auth plugin for [HTTPie](https://github.com/jakubroztocil/httpie).

      ### Ruby
      [APIAuth](https://github.com/mgomes/api_auth) Ruby Gem 

      ## Postman Collections

  - name: Messages
    description: >-
      The SimpleTexting Messages API provides a number of endpoints for building powerful two-way messaging applications. The Messages API provides access to three main resources:
      
      * Messages - Messages delivered from an application to a handset.
      
      * Delivery Reports - Real time reports on the delivery status of a message. As a message is processed, it's status may change several times before it is finally delivered to a handset.
      
      * Replies - Messages sent from a handset to an application. These messages are typically a reply to a previously sent message.
      
      ![Message Flow](https://i.imgur.com/jJeHwf5.png)
  - name: Delivery Reports
    description: |
      If a callback URL is specified in the submit message request, then changes to the message status, 
      replies received in response to the message or delivery reports received for the message will be pushed via a HTTP POST request. An alternative to delivery reports via callbacks is custom webhooks using the webhooks management API. 
      
      All notifications are JSON encoded and the request expects to receive a response in the HTTP 200 range. If a valid response isn't received the request will be retried in an exponentially backing off fashion.

      Delivery Reports may carry an additional charge. For pricing, please contact your Account Manager or Support Team (support@simpletexting.net).

      For delivery reports or changes in the status of a message, the POST request to the specified URL will be as follows:
        
        _Note, multiple delivery report notifications will be recieved for a single message._
      
      ```json
      {
        "callback_url":"http://mockbin.org/bin/ac52ebd4-eca1-4c86-bf38-4dce79633906",
        "delivery_report_id":"693e87f2-a553-4281-9ffe-ddf04cbc4bf3",
        "source_number":"+1234567890",
        "date_received":"2016-11-03T11:49:02.807Z",
        "status":"delivered",
        "delay":0,
        "submitted_date":"2016-11-03T11:49:01.551Z",
        "original_text":"Hello world!",
        "message_id":"389dc1a8-62a4-4110-ba61-af94806c006f",
        "vendor_account_id":{
          "vendor_id":"SimpleTexting",
          "account_id":"MyAccount"
        },
        "error_code":"220",
        "metadata":{
          "key":"value"
        }
      }
      ```


      The properties included in the notification are as follows:

      * **Callback URL**: The URL specified as the callback URL in the original submit message request.

      * **Delivery Report ID**: A unique ID for the delivery report that this notification represents.

      * **Source Number**: The destination address of the original message.

      * **Date Received**: The date and time at which this notification was generated in UTC.

      * **Status**: The status of the message as indicated by this delivery report. The status field can be one of the following values:

        * `enroute`: Message has been received by the gateway and is being processed (or waiting to be processed).

        * `submitted`: Message has been submitted to a provider/carrier for delivery.

        * `delivered`: Message delivery has been confirmed by the provider, including to the handset (where possible).

        * `expired`: The message has expired.

        * `rejected`: The message will not be delivered - permanent failure. Reasons may include usage limit exceeded, insufficient credit, number blocked, or content filtered

        * `failed`: The message has failed. Reasons may include no active routes to destination or undeliverable by downstream provider.

      * **Delay**: _Deprecated, no longer in use_

      * **Submitted Date**: Date time status of the message changed in UTC. For a delivered DR this may indicate the time at which the message was received on the handset.

      * **Original Text**: Text of the original message.

      * **Message ID**: ID of the original message.

      * **Vendor Account ID**: The account used to submit the original message. The vendor will always be `SimpleTexting`

      * **Error Code**: A status code which provides additional information about the message status:

        * `101`: Message being processed by the gateway.
        
        * `102`: Message is being rerouted to a different provider after failing via the first provider.
        
        * `151`: Message held for screening.
        
        * `200`: Message submitted to downstream provider for delivery.
        
        * `210`: Message accepted by downstream provider.
        
        * `211`: Message is enroute for delivery by provider.
        
        * `212`: Message submitted. Delivery pending.
        
        * `213`: Message scheduled for delivery by downstream provider.
        
        * `220`: Message delivered.
        
        * `221`: Message delivered to the handset.
        
        * `320`: Message validity period has expired (prior to submission).
        
        * `401`: Message validity period has expired (before delivery).
        
        * `301`: Usage threshold reached. Message discarded.
        
        * `302`: Destination address blocked. Message discarded.
        
        * `303`: Source address blocked. Message discarded.
        
        * `304`: Message dropped. Contact support.
        
        * `305`: Message discarded due to duplicate detection.
        
        * `402`: Message rejected by downstream provider.
        
        * `403`: Message skipped by downstream provider.
        
        * `410`: Invalid source address.
        
        * `411`: Invalid destination address.
        
        * `412`: Destination address blocked.
        
        * `413`: SMS service unavailable on destination.
        
        * `414`: Destination unreachable.
        
        * `330`: Gateway failure.
        
        * `331`: Message discarded.
        
        * `332`: No available route to destination.
        
        * `333`: Source address unsupported for this destination.
        
        * `400`: Message failed; undeliverable.
        
        * `405`: Message cancelled or deleted by provider.
        
  - name: Replies
    description: ''
  - name: Messaging Reports
    description: |
      The SimpleTexting Reports API provides a number of endpoints for running reports of messages sent and received through
      a SimpleTexting Account. The API allows two kinds of reports, _Detailed Reports_ and _Summary Reports_.
      
      Detailed reports list all messages and the details of each message sent or received in a specified time period. Summary reports allow inbound and outbound message data to be aggregated on a number of dimensions.
  - name: Short Trackable Links Reports
    description: |
      Short Trackable Links is a feature available to [Messaging API](https://developers.simpletexting.com/code/messages-api-documentation/) users whereby it automatically and seamlessly shortens any URL to just 22 characters. Every shortened URL is unique to each recipient.

      The reporting API has endpoints specific to 
      this feature, allowing users to obtain details regarding 
      the number of click-throughs on each URL.

      To enable this feature on your account, contact your account manager or contact support on [support@simpletexting.net](support@simpletexting.net).

      To learn more about the benefits of the Short Trackable Links feature, [visit our feature page](https://simpletexting.com/au/feature/short-urls/).
servers:
  - url: 'https://api.simpletexting.com/'

# Holds the relative paths to the individual endpoints. The path is appended to the
# basePath in order to construct the full URL. 
paths:
  /v2-preview/reporting/messages/metakeys:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Metadata Keys
      description: Returns a list of metadata keys.
      operationId: PostMetadataKeys
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metakeyrequest'
      responses:
        200:
          description: A list of metadata keys.
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metakeyresponse'
        400:
          description: Bad Request. Check the json response for more details on what went wrong.
  /v2-preview/reporting/messages/detail:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Post detail report
      description: Generates a report listing all sent and/or received messages within a specified time period.
      operationId: PostDetailReport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/detailrequest'
      responses:
        200:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailresponse'
      deprecated: false
  /v2-preview/reporting/messages/summary:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Post summary report
      description: Create daily report summary containing total number of sent, received and billing units.
      operationId: PostSummaryReport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/summaryrequest'
      responses:
        200:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summaryresponse'
      deprecated: false
  /v2-preview/reporting/messages/insights:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Post insight report
      description: Create report summary containing total number of sent, received and billing units, using pre-calculated data to improve performance.
      operationId: PostInsightReport
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/summaryrequest'
      responses:
        200:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/summaryresponse'
      deprecated: false
  /v2-preview/reporting/messages/async/detail:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Post async detail report
      description: Generates an asynchronous report listing all sent and/or received messages within a specified time period.
      operationId: PostAsyncDetailReport
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncsentmessagesdetailrequest'
        required: true
      responses:
        202:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncreportresponse'
      deprecated: false
  /v2-preview/reporting/messages/async/summary:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Post async summary report
      description: Creates an asynchronous report summary containing total number of sent, received and billing units.
      operationId: PostAsyncSummaryReport
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/asyncsummaryrequest'
      responses:
        202:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/asyncreportresponse'
      deprecated: false
  /v2-preview/reporting/messages/async/status:
    get:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Get async detail report status
      description: Retrieves the status of a detail report.
      operationId: GetAsyncDetailStatus
      parameters:
        - name: report_id
          in: query
          description: The ID of the detail report to retrieve.
          required: true
          style: form
          explode: true
          schema:
            type: string
            example: abc
      responses:
        200:
          description: The status of the requested detail report.
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportstatusresponse'
      deprecated: false
  /v2-preview/reporting/messages/async/detail/fields:
    post:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Get async detail fields
      description: Can be used for async detail report to select the fields to export csv files
      operationId: GetAsyncDetailFields
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/metakeyrequest'
            example:
              page: 1
              page_size: 50
              start_date: 2020-05-28T10:27:46.259Z
              end_date: 2020-06-28T10:27:46.259Z
      responses:
        200:
          description: A list of selected fields to export csv files.
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fieldsresponse'
  /v2-preview/reporting/detail/scheduled:
    post:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messaging Reports
      summary: Scheduled detail report
      description: >-
        Create scheduled report in detail containing total number of sent, received and billing units.
      operationId: detailscheduledreport
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleddetailreport'
        required: true
      responses:
        '201':
          description: A scheduled detail report received using the specified parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduledreportresponse'
      deprecated: false
  /v2-preview/reporting/detail/scheduled/{scheduled_id}:
    put:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messaging Reports
      summary: Update a scheduled detail report
      description: >-
        Updates a selected scheduled report in detail, which contains a total number of sent, received and billing units.
      operationId: updatedetailscheduledreport
      parameters:
        - name: scheduled_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the scheduled report to update.
          example: e6fb8282-c7c3-4367-8590-6c77ddb11c3e
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleddetailreport'
        required: true
      responses:
        '200':
          description: The updated scheduled detail report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduleddetailreport'
      deprecated: false
  /v2-preview/reporting/summary/scheduled:
    post:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messaging Reports
      summary: Scheduled summary report
      description: >-
        Create scheduled report summary containing total number of sent, received and billing units.
      operationId: summaryscheduledreport
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduledsummaryreport'
        required: true
      responses:
        '201':
          description: A scheduled summary report received using the specified parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduledreportresponse'
      deprecated: false
  /v2-preview/reporting/summary/scheduled/{scheduled_id}:
    put:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messaging Reports
      summary: Update a scheduled summary report
      description: >-
        Updates a selected scheduled report summary, which contains a total number of sent, received and billing units.
      operationId: updatesummaryscheduledreport
      parameters:
        - name: scheduled_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the scheduled report to update.
          example: e6fb8282-c7c3-4367-8590-6c77ddb11c3e
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduledsummaryreport'
        required: true
      responses:
        '200':
          description: The updated scheduled summary report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduledsummaryreport'
      deprecated: false
  /v2-preview/reporting/scheduled:
    get:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Get active reports
      description: Retrieves all ACTIVE scheduled reports of a provided account.
      operationId: GetActiveReport
      parameters:
        - name: page_size
          in: query
          description: Number of results to return in a page for paginated result sets.
          style: form
          explode: true
          schema:
            type: number
            example: 1
            minimum: 1
            maximum: 100
        - name: page_token
          in: query
          description: Returned by Chronos service
          schema:
            type: string
      responses:
        200:
          description: A list of all messages received in the specified time window
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chronosscheduleresponse'
        404:
          description: Scheduled report not found.
      deprecated: false
  /v2-preview/reporting/scheduled/{scheduled_id}:
    get:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Get scheduled report by id
      description: Retrieves a scheduled report by providing its id.
      operationId: GetScheduledReport
      parameters:
        - name: scheduled_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the scheduled report to retrieve.
          example: e6fb8282-c7c3-4367-8590-6c77ddb11c3e
      responses:
        200:
          description: The scheduled report matching the provided ID.
          headers: { }
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scheduledreport'
        404:
          description: Scheduled report not found.
      deprecated: false
    delete:
      security:
        - basic_auth: [ ]
        - hmac_auth: [ ]
      tags:
        - Messaging Reports
      summary: Delete scheduled report by id
      description: Deletes a scheduled report by providing its id.
      operationId: DeleteScheduledReport
      parameters:
        - name: scheduled_id
          in: path
          required: true
          schema:
            type: string
          description: The ID of the scheduled report to delete.
          example: e6fb8282-c7c3-4367-8590-6c77ddb11c3e
      responses:
        202:
          description: An empty response indicating the report has been deleted.
        404:
          description: Scheduled report not found.
      deprecated: false
  '/v1/messages/{messageId}':
    get:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messages
      summary: Get message status
      description: |
        Retrieve the current status of a message using the message ID returned
        in the send messages end point.

        A successful request to the get message status endpoint will return a
        response body as follows:

        ```json

        {
            "format": "SMS",
            "content": "My first message!",
            "metadata": {
                "key1": "value1",
                "key2": "value2"
            },
            "message_id": "877c19ef-fa2e-4cec-827a-e1df9b5509f7",
            "callback_url": "https://my.callback.url.com",
            "delivery_report": true,
            "destination_number": "+1234567890",
            "scheduled": "2016-11-03T11:49:02.807Z",
            "source_number": null,
            "message_expiry_timestamp": "2016-11-03T11:49:02.807Z",
            "status": "enroute"
        }

        ```

        The status property of the response indicates the current status of the
        message. See the Delivery Reports section of this documentation for more information on message
        statues.

        *Note: If an invalid or non existent message ID parameter is specified
        in the request, then a HTTP 404 Not Found response will be returned*
      operationId: GetMessageStatus
      parameters:
        - name: messageId
          in: path
          description: '36 character UUID.'
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: The submitted message including the status of the message
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Getmessagestatusresponse'
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response' 
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'  
      deprecated: false
    put:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messages
      summary: Cancel scheduled message
      description: |
        Cancel a scheduled message that has not yet been delivered.

        A scheduled message can be cancelled by updating the status of a message
        from ```scheduled``` to ```cancelled```. This is done by submitting a PUT request to the
        messages endpoint using the message ID as a parameter (the same endpoint used above to retrieve
        the status of a message).

        The body of the request simply needs to contain a ```status``` property with the value set to ```cancelled```.

        ```json

        {
            "status": "cancelled"
        }

        ```

        *Note: Only messages with a status of scheduled can be cancelled. If an invalid or non existent message ID parameter is specified in the request, then a HTTP 404 Not Found response will be returned*
      operationId: CancelScheduledMessage
      parameters:
        - name: messageId
          in: path
          description: '36 character UUID.'
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: 'Parameters of a message to change.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cancelscheduledmessagerequest'
            example:
              status: cancelled
        required: true
      responses:
        '200':
          description: Message status updated successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400response'
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'  
      deprecated: false
  /v1/messages:
    post:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Messages
      summary: Send messages
      description: |
        Submit one or more (up to 100 per request) SMS, MMS or text to voice
        messages for delivery.

        The most basic message has the following structure:

        ```json

        {
            "messages": [
                {
                    "content": "My first message!",
                    "destination_number": "+1234567890"
                }
            ]
        }

        ```

        More advanced delivery features can be specified by setting the
        following properties in a message:

        - ```callback_url``` A URL can be included with each message to which
        Webhooks will be pushed to via a HTTP POST request. Webhooks will be sent if and when the status of the message changes as it is processed (if the delivery report property of the request is set to ```true```) and when replies are received. Specifying a callback URL is optional.

        - ```content``` The content of the message. This can be a Unicode string, up to 5,000 characters long.
          Message content is required.

        - ```delivery_report``` Delivery reports can be requested with each
        message. If delivery reports are requested, a webhook will be submitted to the ```callback_url``` property specified for the message (or to the webhooks)
          specified for the account every time the status of the message changes as it is processed. The
          current status of the message can also be retrieved via the Delivery Reports endpoint of the
          Messages API. Delivery reports are optional and by default will not be requested.

        - ```destination_number``` The destination number the message should be
        delivered to. This should be specified in E.164
          international format. For information on E.164, please refer to http://en.wikipedia.org/wiki/E.164.
          A destination number is required.

        - ```format``` The format specifies which format the message will be
        sent as, ```SMS``` (text message), ```MMS``` (multimedia message)
          or ```TTS``` (text to speech). With ```TTS``` format, we will call the destination number and read out the
          message using a computer generated voice. Specifying a format is optional, by default ```SMS``` will be used.

        - ```media``` The media is used to specify a list of URLs of the media file(s) that you are trying to send. 
        Supported file formats include png, jpeg and gif. ```format``` parameter must be set to ```MMS``` for this to
        work.

        - ```subject``` The subject field is used to denote subject of the MMS
        message and has a maximum size of 64 characters long. Specifying a
        subject is optional.

        - ```scheduled``` A message can be scheduled for delivery in the future
        by setting the scheduled property.
          The scheduled property expects a date time specified in ISO 8601 format. The scheduled time must be
          provided in UTC and is optional. If no scheduled property is set, the message will be delivered immediately.

        - ```message_expiry_timestamp``` A message expiry timestamp can be
        provided to specify the latest time
          at which the message should be delivered. If the message cannot be delivered before the specified
          message expiry timestamp elapses, the message will be discarded. Specifying a message expiry 
          timestamp is optional.

        - ```metadata``` Metadata can be included with the message which will
        then be included with any delivery
          reports or replies matched to the message. This can be used to create powerful two-way messaging
          applications without having to store persistent data in the application. Up to 10 key / value metadata data
          pairs can be specified in a message. Each key can be up to 100 characters long, and each value up to 
          256 characters long. Specifying metadata for a message is optional.
        
        The response body of a successful POST request to the messages endpoint
        will include a ```messages``` property which contains a list of all messages submitted. The list of
        messages submitted will reflect the list of messages included in the request, but each message
        will also contain two new properties, ```message_id``` and ```status```. The returned message ID
        will be a 36 character UUID which can be used to check the status of the message via the Get Message
        Status endpoint. The status of the message which reflect the status of the message at submission
        time which will always be ```queued```. See the Delivery Reports section of this documentation for
        more information on message statues.

        *Note: when sending multiple messages in a request, all messages must be valid for the request 
        to be successful. If any messages in the request are invalid, no messages will be sent.*
      operationId: SendMessages
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sendmessagesrequest'
            example:
              messages:
                - callback_url: 'https://my.callback.url.com'
                  content: My first message
                  destination_number: '+1234567890'
                  delivery_report: true
                  format: SMS
                  message_expiry_timestamp: '2016-11-03T11:49:02.807Z'
                  metadata:
                    key1: value1
                    key2: value2
                  scheduled: '2016-11-03T11:49:02.807Z'
                - callback_url: 'https://my.callback.url.com'
                  content: My second message
                  destination_number: '+1234567890'
                  delivery_report: true
                  format: MMS
                  subject: This is an MMS message
                  media:
                    - >-
                      https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg
                  message_expiry_timestamp: '2016-11-03T11:49:02.807Z'
                  metadata:
                    key1: value1
                    key2: value2
                  scheduled: '2016-11-03T11:49:02.807Z'
        required: true
      responses:
        '202':
          description: Messages were accepted for processing
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sendmessagesresponse'
        '400':
          description: Unexpected error in API call. See HTTP response body for details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400response'
              example:
                message: Something went wrong. Please try again later.
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response'
      deprecated: false
  /v1/delivery_reports:
    get:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Delivery Reports
      summary: Check delivery reports
      description: >-
        Check for any delivery reports that have been received.

        Delivery reports are a notification of the change in status of a message
        as it is being processed.

        Each request to the check delivery reports endpoint will return any
        delivery reports received that

        have not yet been confirmed using the confirm delivery reports endpoint.
        A response from the check

        delivery reports endpoint will have the following structure:

        ```json

        {
            "delivery_reports": [
                {
                    "callback_url": "https://my.callback.url.com",
                    "delivery_report_id": "01e1fa0a-6e27-4945-9cdb-18644b4de043",
                    "source_number": "+1234567890",
                    "date_received": "2017-05-20T06:30:37.642Z",
                    "status": "enroute",
                    "delay": 0,
                    "submitted_date": "2017-05-20T06:30:37.639Z",
                    "original_text": "My first message!",
                    "message_id": "d781dcab-d9d8-4fb2-9e03-872f07ae94ba",
                    "vendor_account_id": {
                        "vendor_id": "SimpleTexting",
                        "account_id": "MyAccount"
                    },
                    "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                    }
                },
                {
                    "callback_url": "https://my.callback.url.com",
                    "delivery_report_id": "0edf9022-7ccc-43e6-acab-480e93e98c1b",
                    "source_number": "+1234567890",
                    "date_received": "2017-05-21T01:46:42.579Z",
                    "status": "enroute",
                    "delay": 0,
                    "submitted_date": "2017-05-21T01:46:42.574Z",
                    "original_text": "My second message!",
                    "message_id": "fbb3b3f5-b702-4d8b-ab44-65b2ee39a281",
                    "vendor_account_id": {
                        "vendor_id": "SimpleTexting",
                        "account_id": "MyAccount"
                    },
                    "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                    }
                }
            ]
        }

        ```

        Each delivery report will contain details about the message, including
        any metadata specified

        and the new status of the message (as each delivery report indicates a
        change in status of a

        message) and the timestamp at which the status changed. Every delivery
        report will have a 

        unique delivery report ID for use with the confirm delivery reports
        endpoint.

        *Note: The source number and destination number properties in a delivery
        report are the inverse of

        those specified in the message that the delivery report relates to. The
        source number of the

        delivery report is the destination number of the original message.*

        Subsequent requests to the check delivery reports endpoint will return
        the same delivery reports

        and a maximum of 100 delivery reports will be returned in each request.
        Applications should use the

        confirm delivery reports endpoint in the following pattern so that
        delivery reports that have been

        processed are no longer returned in subsequent check delivery reports
        requests.

        1. Call check delivery reports endpoint

        2. Process each delivery report

        3. Confirm all processed delivery reports using the confirm delivery
        reports endpoint

        *Note: It is recommended to use the Webhooks feature to receive reply
        messages rather than

        polling the check delivery reports endpoint.*
      operationId: CheckDeliveryReports
      parameters: []
      responses:
        '200':
          description: Unconfirmed reports
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkdeliveryreportsresponse'
              example:
                delivery_reports:
                  - callback_url: 'https://my.callback.url.com'
                    delivery_report_id: 01e1fa0a-6e27-4945-9cdb-18644b4de043
                    source_number: '+1234567890'
                    date_received: '2017-05-20T06:30:37.642Z'
                    status: enroute
                    delay: 0
                    submitted_date: '2017-05-20T06:30:37.639Z'
                    original_text: My first message!
                    message_id: d781dcab-d9d8-4fb2-9e03-872f07ae94ba
                    vendor_account_id:
                      vendor_id: SimpleTexting
                      account_id: MyAccount
                    metadata:
                      key1: value1
                      key2: value2
                  - callback_url: 'https://my.callback.url.com'
                    delivery_report_id: 0edf9022-7ccc-43e6-acab-480e93e98c1b
                    source_number: '+1234567890'
                    date_received: '2017-05-21T01:46:42.579Z'
                    status: submitted
                    delay: 0
                    submitted_date: '2017-05-21T01:46:42.574Z'
                    original_text: My second message!
                    message_id: fbb3b3f5-b702-4d8b-ab44-65b2ee39a281
                    vendor_account_id:
                      vendor_id: SimpleTexting
                      account_id: MyAccount
                    metadata:
                      key1: value1
                      key2: value2
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response' 
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'
  /v1/delivery_reports/confirmed:
    post:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Delivery Reports
      summary: Confirm delivery reports as received
      description: >-
        Mark a delivery report as confirmed so it is no longer return in check
        delivery reports requests.

        The confirm delivery reports endpoint is intended to be used in
        conjunction with the check delivery

        reports endpoint to allow for robust processing of delivery reports.
        Once one or more delivery

        reports have been processed, they can then be confirmed using the
        confirm delivery reports endpoint so they

        are no longer returned in subsequent check delivery reports requests.

        The confirm delivery reports endpoint takes a list of delivery report
        IDs as follows:

        ```json

        {
            "delivery_report_ids": [
                "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
                "3487b3fa-6586-4979-a233-2d1b095c7718",
                "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
            ]
        }

        ```

        Up to 100 delivery reports can be confirmed in a single confirm delivery
        reports request.
      operationId: ConfirmDeliveryReportsAsReceived
      parameters: []
      requestBody:
        description: 'Delivery reports to confirm as received.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirmdeliveryreportsasreceivedrequest'
            example:
              delivery_report_ids:
                - 011dcead-6988-4ad6-a1c7-6b6c68ea628d
                - 3487b3fa-6586-4979-a233-2d1b095c7718
                - ba28e94b-c83d-4759-98e7-ff9c7edb87a1
        required: true
      responses:
        '202':
          description: Requested delivery reports will be marked as confirmed
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Requested delivery reports will be marked as confirmed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400response'
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response' 
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'
      deprecated: false
  /v1/replies:
    get:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Replies
      summary: Check replies
      description: >-
        Check for any replies that have been received.

        Replies are messages that have been sent from a handset in response to a
        message sent by an

        application or messages that have been sent from a handset to a inbound
        number associated with

        an account, known as a dedicated inbound number (contact
        <support@simpletexting.net> for more

        information on dedicated inbound numbers).

        Each request to the check replies endpoint will return any replies
        received that have not yet

        been confirmed using the confirm replies endpoint. A response from the
        check replies endpoint

        will have the following structure:

        ```json

        {
            "replies": [
                {
                    "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                    },
                    "message_id": "877c19ef-fa2e-4cec-827a-e1df9b5509f7",
                    "reply_id": "a175e797-2b54-468b-9850-41a3eab32f74",
                    "date_received": "2016-12-07T08:43:00.850Z",
                    "callback_url": "https://my.callback.url.com",
                    "destination_number": "+1987654321",
                    "source_number": "+1234567890",
                    "vendor_account_id": {
                        "vendor_id": "SimpleTexting",
                        "account_id": "MyAccount"
                    },
                    "content": "My first reply!"
                },
                {
                    "metadata": {
                        "key1": "value1",
                        "key2": "value2"
                    },
                    "message_id": "8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4",
                    "reply_id": "3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f",
                    "date_received": "2016-12-07T08:43:00.850Z",
                    "callback_url": "https://my.callback.url.com",
                    "destination_number": "+1987654321",
                    "source_number": "+1234567890",
                    "vendor_account_id": {
                        "vendor_id": "SimpleTexting",
                        "account_id": "MyAccount"
                    },
                    "content": "My second reply!"
                }
            ]
        }

        ```

        Each reply will contain details about the reply message, as well as
        details of the message the reply was sent

        in response to, including any metadata specified. Every reply will have
        a reply ID to be used with the

        confirm replies endpoint.

        *Note: The source number and destination number properties in a reply
        are the inverse of those

        specified in the message the reply is in response to. The source number
        of the reply message is the

        same as the destination number of the original message, and the
        destination number of the reply

        message is the same as the source number of the original message. If a
        source number

        wasn't specified in the original message, then the destination number
        property will not be present

        in the reply message.*

        Subsequent requests to the check replies endpoint will return the same
        reply messages and a maximum

        of 100 replies will be returned in each request. Applications should use
        the confirm replies endpoint

        in the following pattern so that replies that have been processed are no
        longer returned in

        subsequent check replies requests.

        1. Call check replies endpoint

        2. Process each reply message

        3. Confirm all processed reply messages using the confirm replies
        endpoint

        *Note: It is recommended to use the Webhooks feature to receive reply
        messages rather than polling

        the check replies endpoint.*
      operationId: CheckReplies
      parameters: []
      responses:
        '200':
          description: Unconfirmed replies
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkrepliesresponse'
              example:
                replies:
                  - metadata:
                      key1: value1
                      key2: value2
                    message_id: 877c19ef-fa2e-4cec-827a-e1df9b5509f7
                    reply_id: a175e797-2b54-468b-9850-41a3eab32f74
                    date_received: '2016-12-07T08:43:00.850Z'
                    callback_url: 'https://my.callback.url.com'
                    destination_number: '+1234567890'
                    source_number: '+1234567890'
                    vendor_account_id:
                      vendor_id: SimpleTexting
                      account_id: MyAccount
                    content: My first reply!
                  - metadata:
                      key1: value1
                      key2: value2
                    message_id: 8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4
                    reply_id: 3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f
                    date_received: '2016-12-07T08:43:00.850Z'
                    callback_url: 'https://my.callback.url.com'
                    destination_number: '+1234567890'
                    source_number: '+1234567890'
                    vendor_account_id:
                      vendor_id: SimpleTexting
                      account_id: MyAccount
                    content: My second reply!
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response' 
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'
  /v1/replies/confirmed:
    post:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
        - Replies
      summary: Confirm replies as received
      description: >-
        Mark a reply message as confirmed so it is no longer returned in check
        replies requests.

        The confirm replies endpoint is intended to be used in conjunction with
        the check replies endpoint

        to allow for robust processing of reply messages. Once one or more reply
        messages have been processed

        they can then be confirmed using the confirm replies endpoint so they
        are no longer returned in

        subsequent check replies requests.

        The confirm replies endpoint takes a list of reply IDs as follows:

        ```json

        {
            "reply_ids": [
                "011dcead-6988-4ad6-a1c7-6b6c68ea628d",
                "3487b3fa-6586-4979-a233-2d1b095c7718",
                "ba28e94b-c83d-4759-98e7-ff9c7edb87a1"
            ]
        }

        ```

        Up to 100 replies can be confirmed in a single confirm replies request.
      operationId: ConfirmRepliesAsReceived
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirmrepliesasreceivedrequest'
            example:
              reply_ids:
                - 011dcead-6988-4ad6-a1c7-6b6c68ea628d
                - 3487b3fa-6586-4979-a233-2d1b095c7718
                - ba28e94b-c83d-4759-98e7-ff9c7edb87a1
        required: true
      responses:
        '202':
          description: Requested replies will be marked as confirmed
          headers: {}
          content:
            text/plain:
              schema:
                type: object
                description: Requested replies will be marked as confirmed
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400response'
        '403':
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403response' 
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404response'
      deprecated: false
  /v1/reporting/links/summary:
    get:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
      - Short Trackable Links Reports
      summary: Log summary
      description: Clicks summary report for metadata key value pair, long url and short url.
      operationId: LogSummary
      parameters:
      - name: key
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: value
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: url
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: recipient
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: pageSize
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSummaryResult'
              example:
                total_clicks: 3
                unique_clicks: 1
                total_views: 2
                unique_views: 1
                short_urls_generated: 1
                short_urls:
                - click_count: 3
                  view_count: 2
                  message_id: 00000000-0000-0000-0000-000000000000
                  long_url: https://developers.simpletexting.com
                  short_url: https://nxt.to/abc1234
                  destination_number: +1234567890
                pagination:
                  page: 1
                  page_size: 100
                  page_count: 3
        400:
          description: Bad Request. Invalid data provided
        404:
          description: Data cannot be found
        500:
          description: System Error
      deprecated: false
  /v1/reporting/links/detail:
    get:
      security:
        - basic_auth: []
        - hmac_auth: []
      tags:
      - Short Trackable Links Reports
      summary: Log detail
      description: Detailed clicks report for a hashcode.
      operationId: LogDetail
      parameters:
      - name: hash
        in: query
        description: ''
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: number
          format: double
      - name: pageSize
        in: query
        description: ''
        style: form
        explode: true
        schema:
          type: number
          format: double
      responses:
        200:
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsDetailResult'
              example:
                message_id: 00000000-0000-0000-0000-000000000000
                long_url: https://developers.simpletexting.com
                short_url: https://nxt.to/abc1234
                destination_number: +1234567890
                click_count: 3
                view_count: 2
                clicks:
                - dt: 2018-09-18T01:22:17.071493
                  user_agent: Mozilla/5.0 (Windows NT...
                  ip: 127.0.0.1
                views:
                - dt: 2018-09-18T01:22:17.071493
                  user_agent: Mozilla/5.0 (Windows NT...
                  ip: 127.0.0.1
                pagination:
                  page: 1
                  page_size: 100
                  page_count: 3
        400:
          description: Bad Request. Invalid data provided
        404:
          description: Data cannot be found
        500:
          description: System Error
      deprecated: false

# An object to hold reusable parts that can be used across the spec
components:
  schemas:
    metakeyresponse:
      title: metakeyresponse
      required:
        - keys
      properties:
        keys:
          type: array
          items:
            type: string
          example:
            - meta1
            - meta2
            - meta3
    chronosscheduleresponse:
      title: chronosscheduleresponse
      type: object
      required:
        - page_token
        - page_size
      properties:
        page_token:
          type: string
          example: abc123
        page_size:
          type: number
          example: 20
          description: Number of results to return in a page for paginated result sets.
        data:
          type: array
          items:
            $ref: '#/components/schemas/scheduledreport'  
    scheduleddetailreport:
      title: scheduleddetailreport
      type: object
      required:
        - label
        - schedule
        - report
      properties:
        label:
          type: string
          example: Weekly Report
          description: The label of the report schedule
        schedule:
          $ref: '#/components/schemas/schedule'
        report:
          $ref: '#/components/schemas/scheduleddetailrequest'
        scheduled_report_id:
          type: string
          example: "43928f76-c381-4943-8619-f10460005898"
          description: The ID of the scheduled report.
        message_type:
          $ref: '#/components/schemas/MessageDirection'
        report_type:
          type: string
          example: detail  
    scheduleddetailrequest:
      title: scheduleddetailrequest
      type: object
      description: A scheduled detail report request
      required:
        - period
      properties:
        period:
          $ref: '#/components/schemas/ReportPeriod'
        timezone:
          type: string
          example: America/New_York
          description: The standard timezone name
        direction:
          $ref: '#/components/schemas/MessageDirection'
        source:
          type: string
          example: "+1234567890"
          description: The source phone number.
        destination:
          type: string
          example: "+1234567890"
          description: The destination phone number.
        metadata_key:
          type: string
          example: broadcastId
          description: Filter results for messages that include a metadata key.
        metadata_value:
          type: string
          example: ABC
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
        accounts:
          type: array
          items:
            type: string
          example:
            - Account1
            - Account2
          description: >-
            Filter results by a specific account. By default results
            will be returned for the account associated with the authentication
            credentials and all sub-accounts.
        status:
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
          description: An array of message statuses.
        opt_out:
          type: string
          example: "true"
          description: Filter the report to only include messages that triggered an opt-out
        delivery_options:
          type: array
          items:
            $ref: '#/components/schemas/deliveryOptionsBody'
          description: A list of options to configure the delivery of the report.
    schedule:
      title: schedule
      type: object
      description: The time schedule of a scheduled report
      required:
        - timezone
        - cron_expression
        - type
      properties:
        timezone:
          type: string
          example: UTC
          description: The timezone of the report.
        cron_expression:
          type: string
          example: "0 0 * * * ? *"
          description: A string consisting of six or seven subexpressions that describe individual details of the schedule.
        type:
          type: string
          example: cron
    ReportPeriod:
      title: ReportPeriod
      enum:
        - TODAY
        - YESTERDAY
        - THIS_WEEK
        - LAST_WEEK
        - THIS_MONTH
        - LAST_MONTH
        - LAST_30_DAYS
        - LAST_7_DAYS
        - THIS_WEEKDAYS
        - LAST_WEEKDAYS
      type: string
      description: Automatically set a date range based on the period value. Can't be combined with start_date and end_date.
      example: THIS_WEEK
    scheduledreport:
      title: scheduledreport
      type: object
      required:
        - label
        - schedule
        - report
      properties:
        label:
          type: string
          example: Weekly Report
          description: The label of the report schedule
        report:
          $ref: '#/components/schemas/scheduledsummaryrequest'
        schedule:
          $ref: '#/components/schemas/schedule'
        scheduled_report_id:
          type: string
          example: "43928f76-c381-4943-8619-f10460005898"
          description: The ID of the scheduled report.
        message_type:
          $ref: '#/components/schemas/MessageDirection'
        report_type:
          type: string
          example: detail
    scheduledreportresponse:
      title: scheduledreportresponse
      type: object
      required:
        - scheduled_report_id
      properties:
        scheduled_report_id:
          type: string
          example: "51f0097f-90b2-4a59-ad88-a0fd93abaa82"
          description: The ID of the scheduled report.
    scheduledsummaryreport:
      title: scheduledsummaryreport
      type: object
      required:
        - label
        - schedule
        - report
      properties:
        label:
          type: string
          example: Weekly Report
          description: The label of the report schedule
        schedule:
          $ref: '#/components/schemas/schedule'
        report:
          $ref: '#/components/schemas/scheduledsummaryrequest'
        scheduled_report_id:
          type: string
          example: "43928f76-c381-4943-8619-f10460005898"
          description: The ID of the scheduled report.
        message_type:
          $ref: '#/components/schemas/MessageDirection'
        report_type:
          type: string
          example: detail  
    scheduledsummaryrequest:
      title: scheduledsummaryrequest
      type: object
      description: A scheduled summary report request
      required:
        - period
        - timezone
      properties:
        period:
          $ref: '#/components/schemas/ReportPeriod'
        timezone:
          type: string
          example: America/New_York
          description: The standard timezone name
        direction:
          $ref: '#/components/schemas/MessageDirection'
        source:
          type: string
          example: "+1234567890"
          description: The source phone number.
        destination:
          type: string
          example: "+1234567890"
          description: The destination phone number.
        metadata_key:
          type: string
          example: broadcastId
          description: Filter results for messages that include a metadata key.
        metadata_value:
          type: string
          example: ABC
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
        accounts:
          type: array
          items:
            type: string
          example:
            - Account1
            - Account2
          description: Filter results by a specific account. By default results will be returned for the account associated with the authentication credentials and all sub-accounts.
        status:
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
          example:
            - DELIVERED
            - ENROUTE
          description: An array of message statuses.
        opt_out:
          type: string
          example: "true"
          description: Filter the report to only include messages that triggered an opt-out.
        group_by:
          type: array
          items:
            $ref: '#/components/schemas/GroupByField'
          example:
            - DAY
            - WEEK
          description: Group results by a list of values, from the enumerable table above.
        delivery_options:
          type: array
          items:
            $ref: '#/components/schemas/deliveryOptionsBody'
          description: A list of options to configure the delivery of the report.
    detailrequest:
      title: detailrequest
      required:
        - start_date
        - end_date
      type: object
      properties:
        start_date:
          description: >-
            Start date time for report window. By default, the timezone for this parameter 
            will be taken from the account settings for the account associated with the 
            credentials used to make the request, or the account included in the Account parameter. 
            This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: "2022-12-12T00:00:00.000z"
        end_date:
          description: >-
            End date time for report window. By default, the timezone for this parameter 
            will be taken from the account settings for the account associated with the 
            credentials used to make the request, or the account included in the Account parameter. 
            This can be overridden using the timezone parameter per request. The date must be in ISO8601 format, and after the requested start_date.
          type: string
          example: "2022-12-14T00:00:00.000z"
        direction:
          $ref: '#/components/schemas/MessageDirection'
        timezone:
          description: The timezone of the messages to include, using the name of the region.
          type: string
          example: America/New_York
        source:
          description: Filter results by source address.
          type: string
          example: "+1234567890"
        destination:
          description: Filter results by destination address.
          type: string
          example: "+1234567890"
        destinations:
          description: Filter results by multiple destination addresses. This property overrides the `destination` parameter.
          type: array
          items:
            type: string
          example:
            - "+1234567890"
            - "+1987654321"
        metadata_key:
          description: Filter results for messages that include a metadata key.
          type: string
          example: broadcastId
        metadata_value:
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
          type: string
          example: ABC
        metadata_values:
          description: Filter results for messages that include a metadata key containing these values. This parameter overrides the metadata_value property. If this parameter is provided, the metadata_key parameter must also be provided.
          type: array
          items:
            type: string
          example:
            - meta1
            - meta2
        accounts:
          description: >-
            Filter results by a specific account. By default results
            will be returned for the account associated with the authentication
            credentials and all sub-accounts.
          type: array
          items:
            type: string
          example:
            - Account1
            - Account2
        status:
          description: >-
            An array of message statuses
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
        opt_out:
          description: Filter the report to only include messages that triggered an opt-out
          type: string
          example: "true"
        mms_media:
          description: Filter results by mms media.
          type: string
          example: "true"
        message_format:
          $ref: '#/components/schemas/format'
        page:
          description: Page number for paging through paginated result sets.
          type: number
          example: 0
        page_size:
          description: Number of results to return in a page for paginated result sets.
          type: number
          example: 20
    asyncsentmessagesdetailrequest:
      title: asyncsentmessagesdetailrequest
      required:
        - end_date
        - start_date
      type: object
      properties:
        start_date:
          description: Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: 2022-12-12T00:00:00.000z
        end_date:
          description: End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: 2022-12-14T00:00:00.000z
        timezone:
          description: The timezone of the messages to include, using the name of the region.
          type: string
          example: America/New_York
        direction:
          $ref: '#/components/schemas/MessageDirection'
        source:
          description: Filter results by source address.
          type: string
          example: "+1234567890"
        destination:
          description: Filter results by destination address.
          type: string
          example: "+1234567890"
        metadata_key:
          description: Filter results for messages that include a metadata key.
          type: string
          example: broadcastId
        metadata_value:
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
          type: string
          example: ABC
        accounts:
          description: >-
            Filter results by a specific account. By default results
            will be returned for the account associated with the authentication
            credentials and all sub-accounts.
          type: array
          items:
            type: string
          example:
            - Account1
            - Account2
        status:
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
        opt_out:
          description: Filter the report to only include messages that triggered an opt-out
          type: string
          example: "true"
        message_format:
          $ref: '#/components/schemas/format'
        fields:
          description: Can be used for async detail report to select the fields to export csv files
          type: array
          items:
            $ref: '#/components/schemas/asyncfieldsrequest'
        delivery_options:
          description: A list of options to configure the delivery of the report.
          type: array
          items:
            $ref: '#/components/schemas/deliveryOptionsBody'
    asyncsummaryrequest:
      title: asyncsummaryrequest
      required:
        - start_date
        - end_date
      type: object
      properties:
        start_date:
          description: Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: "2022-12-12T00:00:00.000z"
        end_date:
          description: End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: "2022-12-14T00:00:00.000z"
        timezone:
          description: The timezone of the messages to include, using the name of the region.
          type: string
          example: America/New_York
        direction:
          $ref: '#/components/schemas/MessageDirection'
        source:
          description: Filter results by source address.
          type: string
          example: "+1234567890"
        destination:
          description: Filter results by destination address.
          type: string
          example: "+1234567890"
        metadata_key:
          description: Filter results for messages that include a metadata key.
          type: string
          example: broadcastId
        metadata_value:
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
          type: string
          example: ABC
        accounts:
          description: >-
            Filter results by a specific account. By default results
            will be returned for the account associated with the authentication
            credentials and all sub-accounts.
          type: array
          items:
            type: string
          example:
            - Account1
            - Account2
        status:
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
          description: A list of message statuses to filter the report by.
        opt_out:
          description: Filter the report to only include messages that triggered an opt-out
          type: string
          example: "false"
        group_by:
          description: Group results by a list of values, from the enumerable table above.
          type: array
          items:
            $ref: '#/components/schemas/GroupByField'
          example:
            - STATUS
            - COUNTRY
        delivery_options:
          description: A list of options to configure the delivery of the report.
          type: array
          items:
            $ref: '#/components/schemas/deliveryOptionsBody'
    asyncfieldsrequest:
      title: asyncfieldsrequest
      type: object
      required:
        - name
        - display_name
      properties:
        name:
          type: string
          example: id
          description: The `async/detail/fields` value from API.
        display_name:
          type: string
          example: id
          description: Any string that you want to see in the CSV file header.
    summaryrequest:
      title: summaryrequest
      required:
        - start_date
        - end_date
        - timezone
      type: object
      properties:
        start_date:
          description: Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          type: string
          example: "2022-12-12T00:00:00.000z"
        end_date:
          description:  End date time for report window. By default, the timezone for this parameter
            will be taken from the account settings for the account associated with the
            credentials used to make the request, or the account included in the Account parameter.
            This can be overridden using the timezone parameter per request. The date must be in ISO8601 format, and after the requested start_date.
          type: string
          example: "2022-12-14T00:00:00.000z"
        timezone:
          description: The timezone of the messages to include, using the name of the region.
          type: string
          example: America/New_York
        direction:
          $ref: '#/components/schemas/MessageDirection'
        source:
          description: Filter results by source address.
          type: string
          example: "+1234567890"
        destination:
          description: Filter results by destination address.
          type: string
          example: "+1234567890"
        metadata_key:
          description: Filter results for messages that include a metadata key.
          type: string
          example: broadcastId
        metadata_value:
          description: Filter results for messages that include a metadata key containing this value. If this parameter is provided, the metadata_key parameter must also be provided.
          type: string
          example: ABC
        accounts:
          description: >-
            Filter results by a specific account. By default results
            will be returned for the account associated with the authentication
            credentials and all sub-accounts.
          type: array
          items:
            type: string
          example:
            - account1
            - account2
        status:
          description: >-
            An array of message statuses.
          type: array
          items:
            $ref: '#/components/schemas/MessageStatus'
          example:
            - DELIVERED
            - ENROUTE
        opt_out:
          description: Filter the report to only include messages that triggered an opt-out
          type: string
          example: "true"
        group_by:
          description: Group results by a list of values, from the enumerable table above.
          type: array
          items:
            $ref: '#/components/schemas/GroupByField'
          example:
            - WEEK
            - ACCOUNT
    metakeyrequest:
      title: metakeyrequest
      type: object
      required:
        - start_date
        - end_date
      properties:
        page:
          type: number
          description: Page number for paging through paginated result sets.
          example: 2
        page_size:
          type: number
          description: Number of results to return in a page for paginated result sets.
          example: 15
        start_date:
          type: string
          description: Start date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          example: "2022-12-12T00:00:00.000z"
        end_date:
          type: string
          description: End date time for report window. By default, the timezone for this parameter will be taken from the account settings for the account associated with the credentials used to make the request, or the account included in the Account parameter. This can be overridden using the timezone parameter per request. The date must be in ISO8601 format.
          example: "2022-12-14T00:00:00.000z"
        direction:
          $ref: '#/components/schemas/MessageDirection'
        accounts:
          type: array
          items:
            type: string
          description: Filter results by a specific account. By default results will be returned for the account associated with the authentication credentials and all sub-accounts.
          example:
            - Account1
            - Account2
    asyncreportresponse:
      title: asyncreportresponse
      type: object
      required:
        - report_id
      properties:
        report_id:
          type: string
          example: 51f0097f-90b2-4a59-ad88-a0fd93abaa82
          description: The ID of the returned report.
    reportstatusresponse:
      title: reportstatusresponse
      type: object
      properties:
        report_status:
          type: string
          enum:
            - REQUESTED
            - RUNNING
            - FAILED
            - CANCELLED
            - DONE
          example: DONE
    fieldsresponse:
      title: fieldsresponse
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
            example: [id, content, meta1]
          description: An array of fields to be retrieved.
    detailresponse:
      title: detailresponse
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/DetailMessage'
        pagination:
          $ref: '#/components/schemas/Paginate'
    summaryresponse:
      title: summaryresponse
      type: object
      properties:
        summaries:
          type: array
          items:
            $ref: '#/components/schemas/summaryitemresponse'
        total_sent:
          type: number
          example: 100
        total_received:
          type: number
          example: 50
        total_billing_units:
          type: number
          example: 150
        total_opt_out:
          type: number
          example: 10
    summaryitemresponse:
      title: summaryitemresponse
      type: object
      properties:
        group:
          type: string
          example: Account1
        total_sent:
          type: number
          example: 60
        total_received:
          type: number
          example: 30
        total_billing_units:
          type: number
          example: 90
        total_opt_out:
          type: number
          example: 7
        sub_group:
          type: array
          items:
            $ref: '#/components/schemas/summarysubitemresponse'
    summarysubitemresponse:
      title: summarysubitemresponse
      type: object
      properties:
        date:
          type: string
          example: "2020-11-01"
        group:
          type: string
          example: "2020-11-01"
        total_sent:
          type: number
          example: 20
        total_received:
          type: number
          example: 0
        total_billing_units:
          type: number
          example: 20
        total_opt_out:
          type: number
          example: 0
    MessageDirection:
      title: MessageDirection
      type: object
      enum:
        - inbound
        - outbound
        - all
      example: all
      description: The type of messages to include in the report.
    MessageStatus:
      title: MessageStatus
      type: string
      enum:
        - UNDEFINED
        - QUEUED
        - PROCESSING
        - PROCESSED
        - FAILED
        - SCHEDULED
        - CANCELLED
        - DELIVERED
        - EXPIRED
        - ENROUTE
        - HELD
        - SUBMITTED
        - REJECTED
        - READ
      example: DELIVERED
      description: An enumerable list of potential message statuses.
    Paginate:
      title: Pagination
      type: object
      properties:
        page:
          type: number
          example: 0
        page_size:
          type: number
          example: 20
        has_next:
          type: boolean
          example: false
    Confirmdeliveryreportsasreceivedrequest:
      title: Confirmeliveryreportsasreceivedrequest
      required:
        - delivery_report_ids
      type: object
      properties:
        delivery_report_ids:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: 'Array of unique IDs for the delivery report that this notification represents'
      example:
        delivery_report_ids:
          - 011dcead-6988-4ad6-a1c7-6b6c68ea628d
          - 3487b3fa-6586-4979-a233-2d1b095c7718
          - ba28e94b-c83d-4759-98e7-ff9c7edb87a1
    Checkdeliveryreportsresponse:
      title: Checkdeliveryreportsresponse
      type: object
      properties:
        delivery_reports:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/DeliveryReport'
          description: The oldest 100 unconfirmed delivery reports
      example:
        delivery_reports:
          - callback_url: 'https://my.callback.url.com'
            delivery_report_id: 01e1fa0a-6e27-4945-9cdb-18644b4de043
            source_number: '+1234567890'
            date_received: '2017-05-20T06:30:37.642Z'
            status: enroute
            delay: 0
            submitted_date: '2017-05-20T06:30:37.639Z'
            original_text: My first message!
            message_id: d781dcab-d9d8-4fb2-9e03-872f07ae94ba
            vendor_account_id:
              vendor_id: SimpleTexting
              account_id: MyAccount
            metadata:
              key1: value1
              key2: value2
          - callback_url: 'https://my.callback.url.com'
            delivery_report_id: 0edf9022-7ccc-43e6-acab-480e93e98c1b
            source_number: '+1234567890'
            date_received: '2017-05-21T01:46:42.579Z'
            status: submitted
            delay: 0
            submitted_date: '2017-05-21T01:46:42.574Z'
            original_text: My second message!
            message_id: fbb3b3f5-b702-4d8b-ab44-65b2ee39a281
            vendor_account_id:
              vendor_id: SimpleTexting
              account_id: MyAccount
            metadata:
              key1: value1
              key2: value2
    Confirmrepliesasreceivedrequest:
      title: Confirmrepliesasreceivedrequest
      required:
        - reply_ids
      type: object
      properties:
        reply_ids:
          maxItems: 100
          type: array
          items:
            type: string
            format: uuid
          description: 'The UUID of the *reply* to be confirmed (note: not the UUID of the message it is in response to)'
      example:
        reply_ids:
          - 011dcead-6988-4ad6-a1c7-6b6c68ea628d
          - 3487b3fa-6586-4979-a233-2d1b095c7718
          - ba28e94b-c83d-4759-98e7-ff9c7edb87a1
    VendorAccountId:
      title: VendorAccountId
      type: object
      properties:
        vendor_id:
          type: string
          example: SimpleTexting
        account_id:
          type: string
          description: The account used to submit the original message.
          example: MyAccount001
    Checkrepliesresponse:
      title: Checkrepliesresponse
      type: object
      properties:
        replies:
          maxItems: 100
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Reply'
          description: The oldest 100 unconfirmed replies
      example:
        replies:
          - metadata:
              key1: value1
              key2: value2
            message_id: 877c19ef-fa2e-4cec-827a-e1df9b5509f7
            reply_id: a175e797-2b54-468b-9850-41a3eab32f74
            date_received: '2016-12-07T08:43:00.850Z'
            callback_url: 'https://my.callback.url.com'
            destination_number: '+1234567890'
            source_number: '+1234567890'
            vendor_account_id:
              vendor_id: SimpleTexting
              account_id: MyAccount
            content: My first reply!
          - metadata:
              key1: value1
              key2: value2
            message_id: 8f2f5927-2e16-4f1c-bd43-47dbe2a77ae4
            reply_id: 3d8d53d8-01d3-45dd-8cfa-4dfc81600f7f
            date_received: '2016-12-07T08:43:00.850Z'
            callback_url: 'https://my.callback.url.com'
            destination_number: '+1234567890'
            source_number: '+1234567890'
            vendor_account_id:
              vendor_id: SimpleTexting
              account_id: MyAccount
            content: My second reply!
    SourceNumberType:
      title: SourceNumberType
      enum:
        - INTERNATIONAL
        - ALPHANUMERIC
        - SHORTCODE
      type: string
      description: >-
        Type of source address specified, this can be INTERNATIONAL,
        ALPHANUMERIC or SHORTCODE
      example: INTERNATIONAL
    Cancelscheduledmessagerequest:
      title: Cancelscheduledmessagerequest
      required:
        - status
      type: object
      properties:
        status:
          type: string
          example: cancelled
          description: Must be set to ```cancelled```.
      example:
        status: cancelled
    400response:
      title: Bad request
      required:
      - message
      - details
      type: object
      properties:
        message:
          type: string
        details:
          type: array
          items:
            type: string
          description: ''
      example:
        message: 'Request failed to parse correctly. Please ensure input is valid and try again.'
        details:
        - 'Failed to parse message body.'
    Sendmessagesrequest:
      title: Sendmessagesrequest
      required:
        - messages
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageWithoutSource'
          description: ''
      example:
        messages:
          - callback_url: 'https://my.callback.url.com'
            content: My first message
            destination_number: '+1234567890'
            delivery_report: true
            format: SMS
            message_expiry_timestamp: '2016-11-03T11:49:02.807Z'
            metadata:
              key1: value1
              key2: value2
            scheduled: '2016-11-03T11:49:02.807Z'
          - callback_url: 'https://my.callback.url.com'
            content: My second message
            destination_number: '+1234567890'
            delivery_report: true
            format: MMS
            subject: This is an MMS message
            media:
              - >-
                https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg
            message_expiry_timestamp: '2016-11-03T11:49:02.807Z'
            metadata:
              key1: value1
              key2: value2
            scheduled: '2016-11-03T11:49:02.807Z'
    Reply:
      title: Reply
      type: object
      properties:
        callback_url:
          type: string
          description: >-
            The URL specified as the callback URL in the original submit message
            request
          example: 'https://my.url.com'
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the reply
          example: Hello back
        date_received:
          type: string
          description: Date time when the reply was received
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        destination_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Address from which this reply was sent to
          example: '+1987654321'
        message_id:
          type: string
          description: Unique ID of the original message
          format: uuid
        metadata:
          type: object
          description: >-
            Any metadata that was included in the original submit message
            request
        reply_id:
          type: string
          description: Unique ID of this reply
          format: uuid
        source_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Address from which this reply was received from
          example: '+1234567890'
        vendor_account_id:
          $ref: '#/components/schemas/VendorAccountId'
    DeliveryReport:
      title: DeliveryReport
      type: object
      properties:
        callback_url:
          type: string
          description: >-
            The URL specified as the callback URL in the original submit message
            request
          example: 'https://my.url.com'
        date_received:
          type: string
          description: >-
            The date and time at which this delivery report was generated in
            UTC.
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        delay:
          type: integer
          description: 'Deprecated, no longer in use'
          format: int32
          example: 0
        delivery_report_id:
          type: string
          description: Unique ID for this delivery report
          format: uuid
        message_id:
          type: string
          description: Unique ID of the original message
          format: uuid
        metadata:
          type: object
          description: >-
            Any metadata that was included in the original submit message
            request
        original_text:
          type: string
          description: Text of the original message.
          example: Hello back
        source_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Address from which this delivery report was received
          example: '+1234567890'
        status:
          $ref: '#/components/schemas/Status'
        submitted_date:
          type: string
          description: >-
            The date and time when the message status changed in UTC. For a
            delivered DR this may indicate the time at which the message was
            received on the handset.
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        vendor_account_id:
          $ref: '#/components/schemas/VendorAccountId'
    Getmessagestatusresponse:
      title: Getmessagestatusresponse
      type: object
      properties:
        callback_url:
          type: string
          description: URL replies and delivery reports to this message will be pushed to
          example: 'https://my.url.com'
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the message
          example: Hello world!
        destination_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Destination number of the message
          example: '+1234567890'
        delivery_report:
          type: boolean
          description: Request a delivery report for this message
          example: false
        format:
          $ref: '#/components/schemas/Format'
        message_expiry_timestamp:
          type: string
          description: Date time after which the message expires and will not be sent
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        metadata:
          type: object
          description: >-
            Metadata for the message specified as a set of key value pairs, each
            key can be up to 100 characters long and each value can be up to 256
            characters long

            ```

            {
               "myKey": "myValue",
               "anotherKey": "anotherValue"
            }

            ```
        scheduled:
          type: string
          description: Scheduled delivery date time of the message
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        source_number:
          type: string
          example: 
        message_id:
          type: string
          description: Unique ID of this message
          format: uuid
        status:
          $ref: '#/components/schemas/Status'
    404response:
      title: Resource not found
      required:
      - message
      type: object
      properties:
        message:
          type: string
      example:
        message: Resource not found.
    Status:
      title: Status
      enum:
        - enroute
        - submitted
        - delivered
        - expired
        - rejected
        - undeliverable
        - queued
        - processed
        - cancelled
        - scheduled
        - failed
      type: string
      description: The status of the message
      example: enroute
    Message:
      title: Message
      required:
        - content
        - destination_number
      type: object
      properties:
        callback_url:
          type: string
          description: URL replies and delivery reports to this message will be pushed to
          example: 'https://my.url.com'
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the message
          example: Hello world!
        destination_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Destination number of the message
          example: '+1234567890'
        delivery_report:
          type: boolean
          description: Request a delivery report for this message
          example: false
        format:
          $ref: '#/components/schemas/Format'
        message_expiry_timestamp:
          type: string
          description: Date time after which the message expires and will not be sent
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        metadata:
          type: object
          description: >-
            Metadata for the message specified as a set of key value pairs, each
            key can be up to 100 characters long and each value can be up to 256
            characters long

            ```

            {
               "myKey": "myValue",
               "anotherKey": "anotherValue"
            }

            ```
          example:
            - "myKey": "myValue"
            - "anotherKey": "anotherValue"
        scheduled:
          type: string
          description: Scheduled delivery date time of the message
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        source_number:
          type: string
          example: '+1234567890'
        source_number_type:
          $ref: '#/components/schemas/SourceNumberType'
        message_id:
          type: string
          description: Unique ID of this message
          format: uuid
        status:
          $ref: '#/components/schemas/Status'
        media:
          type: array
          items:
            type: string
          description: >-
            The media is used to specify a list of URLs of the media file(s) that you are
            trying to send. Supported file formats include png, jpeg and gif.
            format parameter must be set to MMS for this to work.
          example: 
            - "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
        subject:
          type: string
          description: >-
            The subject field is used to denote subject of the MMS message and
            has a maximum size of 64 characters long
          example: New Products
    MessageWithoutSource:
      title: Message
      required:
        - content
        - destination_number
      type: object
      properties:
        callback_url:
          type: string
          description: URL replies and delivery reports to this message will be pushed to
          example: 'https://my.url.com'
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the message
          example: Hello world!
        destination_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Destination number of the message
          example: '+1234567890'
        delivery_report:
          type: boolean
          description: Request a delivery report for this message
          example: false
        format:
          $ref: '#/components/schemas/Format'
        message_expiry_timestamp:
          type: string
          description: Date time after which the message expires and will not be sent
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        metadata:
          type: object
          description: >-
            Metadata for the message specified as a set of key value pairs, each
            key can be up to 100 characters long and each value can be up to 256
            characters long

            ```

            {
               "myKey": "myValue",
               "anotherKey": "anotherValue"
            }

            ```
          example:
            - "myKey": "myValue"
            - "anotherKey": "anotherValue"
        scheduled:
          type: string
          description: Scheduled delivery date time of the message
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        message_id:
          type: string
          description: Unique ID of this message
          format: uuid
        status:
          $ref: '#/components/schemas/Status'
        media:
          type: array
          items:
            type: string
          description: >-
            The media is used to specify a list of URLs of the media file(s) that you are
            trying to send. Supported file formats include png, jpeg and gif.
            format parameter must be set to MMS for this to work.
          example: 
            - "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
        subject:
          type: string
          description: >-
            The subject field is used to denote subject of the MMS message and
            has a maximum size of 64 characters long
          example: New Products
    MessageWithSourceNull:
      title: Message
      required:
        - content
        - destination_number
      type: object
      properties:
        callback_url:
          type: string
          description: URL replies and delivery reports to this message will be pushed to
          example: 'https://my.url.com'
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the message
          example: Hello world!
        destination_number:
          maxLength: 15
          minLength: 1
          type: string
          description: Destination number of the message
          example: '+1234567890'
        delivery_report:
          type: boolean
          description: Request a delivery report for this message
          example: false
        format:
          $ref: '#/components/schemas/Format'
        message_expiry_timestamp:
          type: string
          description: Date time after which the message expires and will not be sent
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        metadata:
          type: object
          description: >-
            Metadata for the message specified as a set of key value pairs, each
            key can be up to 100 characters long and each value can be up to 256
            characters long

            ```

            {
               "myKey": "myValue",
               "anotherKey": "anotherValue"
            }

            ```
          example:
            - "myKey": "myValue"
            - "anotherKey": "anotherValue"
        scheduled:
          type: string
          description: Scheduled delivery date time of the message
          format: date-time
          example: '11/3/2016 11:49:02 AM'
        source_number:
          type: string
          example:   
        message_id:
          type: string
          description: Unique ID of this message
          format: uuid
        status:
          $ref: '#/components/schemas/Status'
        media:
          type: array
          items:
            type: string
          description: >-
            The media is used to specify a list of URLs of the media file(s) that you are
            trying to send. Supported file formats include png, jpeg and gif.
            format parameter must be set to MMS for this to work.
          example: 
            - "https://images.pexels.com/photos/1018350/pexels-photo-1018350.jpeg?cs=srgb&dl=architecture-buildings-city-1018350.jpg"
        subject:
          type: string
          description: >-
            The subject field is used to denote subject of the MMS message and
            has a maximum size of 64 characters long
          example: New Products
    DetailMessage:
      title: Message
      required:
        - content
        - destination_number
      type: object
      properties:
        content:
          maxLength: 5000
          minLength: 1
          type: string
          description: Content of the message
          example: Hello world!
        destination_address:
          maxLength: 15
          minLength: 1
          type: string
          description: Destination number of the message
          example: '+1234567890'
        format:
          $ref: '#/components/schemas/Format'
        metadata:
          type: object
          description: >-
            Metadata for the message specified as a set of key value pairs, each
            key can be up to 100 characters long and each value can be up to 256
            characters long
            ```
            {
               "myKey": "myValue",
               "anotherKey": "anotherValue"
            }
            ```
          example:
            - "myKey": "myValue"
            - "anotherKey": "anotherValue"
        source_address:
          type: string
          example: '+1234567890'
        message_id:
          type: string
          description: Unique ID of this message
          format: uuid
        status:
          $ref: '#/components/schemas/Status'
        timestamp:
          type: string
          description: Timestamp of this message
          example: "2017-02-10T16:30:00"
        delivered_timestamp:
          type: string
          description: Time that this message was delivered
          example: "2017-02-10T16:30:00"
        last_status_update:
          type: string
          description: Last time this message's status was updated
          example: "2017-02-10T16:30:00"
        direction:
          $ref: '#/components/schemas/MessageDirection'      
    Sendmessagesresponse:
      title: Sendmessagesresponse
      type: object
      properties:
        messages:
          maxItems: 100
          type: array
          items:
            $ref: '#/components/schemas/MessageWithSourceNull'
          description: ''
    Format:
      title: Format
      enum:
        - SMS
        - TTS
        - MMS
      type: string
      description: 'Filter results by message format, using enumerable MessageType.'
      example: SMS
    deliveryOptionsBody:
      title: deliveryOptionsBody
      type: object
      properties:
        delivery_type:
          type: string
          description: How to deliver the report.
          example: EMAIL
        delivery_addresses:
          type: array
          items:
            type: string
          example:
          - "email@example.com"
          - "test@example.com"
          description: A list of email addresses to use as the recipient of the email. Only works for EMAIL delivery type
        delivery_format:
          type: string
          description: Format of the report.
          example: CSV
      description: A delivery option
    Pagination:
      title: Pagination
      type: object
      properties:
        page:
          type: number
          description: The current page of results
          example: 3
        page_size:
          type: number
          description: The amount of results returned per page
          example: 50
        total_count:
          type: number
          description: The total number of results in the results set
          example: 80
        page_count:
          type: number
          description: The total number of pages in the results set
          example: 5
        next_uri:
          type: string
          description: Link to the next page of results
          example: example.url
        previous_uri:
          type: string
          description: Link to the previous page of results
          example: example.url
    View:
      title: View
      type: object
      properties:
        dt:
          type: string
          example: 2018-09-18T01:22:17.071493
        user_agent:
          type: string
          example: Mozilla/5.0 (Windows NT...
        ip:
          type: string
          example: 127.0.0.1
    ShortUrl:
      title: ShortUrl
      type: object
      properties:
        click_count:
          type: number
          example: 3
        view_count:
          type: number
          example: 2
        message_id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        long_url:
          type: string
          example: https://developers.simpletexting.com
        short_url:
          type: string
          example: https://nxt.to/abc1234
        destination_number:
          type: string
          example: +1234567890
    LogsDetailResult:
      title: LogsDetailResult
      type: object
      properties:
        message_id:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        long_url:
          type: string
          example: https://developers.simpletexting.com
        short_url:
          type: string
          example: https://nxt.to/abc1234
        destination_number:
          type: string
          example: +1234567890
        click_count:
          type: number
          example: 3
        view_count:
          type: number
          example: 2
        clicks:
          type: array
          items:
            $ref: '#/components/schemas/Click'
          description: ''
        views:
          type: array
          items:
            $ref: '#/components/schemas/View'
          description: ''
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        message_id: 00000000-0000-0000-0000-000000000000
        long_url: https://developers.simpletexting.com
        short_url: https://nxt.to/abc1234
        destination_number: +1234567890
        click_count: 3
        view_count: 2
        clicks:
        - dt: 2018-09-18T01:22:17.071493
          user_agent: Mozilla/5.0 (Windows NT...
          ip: 127.0.0.1
        views:
        - dt: 2018-09-18T01:22:17.071493
          user_agent: Mozilla/5.0 (Windows NT...
          ip: 127.0.0.1
        pagination:
          page: 1
          page_size: 100
          page_count: 3
    LogSummaryResult:
      title: LogSummaryResult
      type: object
      properties:
        total_clicks:
          type: number
          example: 3
        unique_clicks:
          type: number
          example: 1
        total_views:
          type: number
          example: 2
        unique_views:
          type: number
          example: 1
        short_urls_generated:
          type: number
          example: 1
        short_urls:
          type: array
          items:
            $ref: '#/components/schemas/ShortUrl'
          description: ''
        pagination:
          $ref: '#/components/schemas/Pagination'
      example:
        total_clicks: 3
        unique_clicks: 1
        total_views: 2
        unique_views: 1
        short_urls_generated: 1
        short_urls:
        - click_count: 3
          view_count: 2
          message_id: 00000000-0000-0000-0000-000000000000
          long_url: https://developers.simpletexting.com
          short_url: https://nxt.to/abc1234
          destination_number: +1234567890
        pagination:
          page: 1
          page_size: 100
          page_count: 3
    Click:
      title: Click
      type: object
      properties:
        dt:
          type: string
          example: 2018-09-18T01:22:17.071493
        user_agent:
          type: string
          example: Mozilla/5.0 (Windows NT...
        ip:
          type: string
          example: 127.0.0.1
    403response:
      title: 403 response
      required:
      - message
      type: object
      properties:
        message:
          type: string
      example:
        message: Invalid authentication credentials
    format:
      title: MessageType
      type: array
      items:
        type: string
        enum:
          - MMS
          - SMS
          - TTS
          - RCS
          - CHANNEL
      description: Format of message type.
      example:
        - MMS
        - TTS
    GroupByField:
      title: GroupByField
      enum:
        - ACCOUNT
        - DAY
        - WEEK
        - MONTH
        - YEAR
        - METADATA_KEY
        - METADATA_VALUE
        - STATUS
        - COUNTRY
      type: string
      example: DAY
  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time
  # Security scheme definitions that can be used across the specification.
  securitySchemes:
    basic_auth: # security definition name (you can name it as you want)
      type: http
      scheme: basic
    hmac_auth:  # security definition name (you can name it as you want)
      type: apiKey 
      # The following options are specific to apiKey type
      in: header # Where API key will be passed: header or query
      name: Authorization # API key parameter name
